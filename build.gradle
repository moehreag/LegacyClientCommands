plugins {
	id 'fabric-loom' version "1.0-SNAPSHOT"
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "legacy-fabric"
		url = "https://repo.legacyfabric.net/repository/legacyfabric/"
	}
	// Fixed LWJGL on Linux
	maven {
		name = 'Babric'
		url = 'https://maven.glass-launcher.net/babric'
	}
}

loom {
	setIntermediaryUrl('https://repo.legacyfabric.net/repository/legacyfabric/net/legacyfabric/intermediary/%1$s/intermediary-%1$s-v2.jar');
}

def lwjgl2 = !project.minecraft_version.startsWith("1.13")
def currentOs = System.getProperty("os.name").toLowerCase(Locale.ENGLISH)

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.legacyfabric:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	if (lwjgl2) {
		if (currentOs.contains("mac")) {
			localRuntime 'org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209'
			localRuntime 'org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209'
			localRuntime 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
		} else if (currentOs.contains("linux")) {
			localRuntime 'org.lwjgl.lwjgl:lwjgl_util:2.9.4-babric.1'
			localRuntime 'org.lwjgl.lwjgl:lwjgl:2.9.4-babric.1'
			localRuntime 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-babric.1'
		}
	}
}

if (lwjgl2) {
	if (currentOs.contains("mac")) {
		configurations.configureEach {
			resolutionStrategy {
				dependencySubstitution {
					substitute module('org.lwjgl.lwjgl:lwjgl_util:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209')
					substitute module('org.lwjgl.lwjgl:lwjgl:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209')
				}
				force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
			}
		}
	} else if (currentOs.contains("linux")) {
		configurations.configureEach {
			resolutionStrategy {
				dependencySubstitution {
					substitute(module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209')) using module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-babric.1')
					substitute module('org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209') using module('org.lwjgl.lwjgl:lwjgl:2.9.4-babric.1')
				}
				force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-babric.1'
			}
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (JavaVersion.current().isJava9Compatible()) it.options.release = 8
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			name = "owlMaven"
			def repository = project.version.toString().contains("beta") || project.version.toString().contains("alpha") ? "snapshots" : "releases"
			url = "https://moehreag.duckdns.org/maven/"+repository
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}
}
